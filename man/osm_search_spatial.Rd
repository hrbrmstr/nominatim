% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/polys.r
\name{osm_search_spatial}
\alias{osm_search_spatial}
\title{Search for places, returning a list of \code{SpatialPointsDataFrame},
\code{SpatialLinesDataFrame} or a \code{SpatialPolygonsDataFrame}}
\usage{
osm_search_spatial(query, country_codes = NULL, viewbox = NULL,
  bounded = FALSE, address_details = TRUE, exclude_place_ids = NULL,
  limit = 1, email = getOption("OSM_API_EMAIL",
  "nominatimrpackage@example.com"), accept_language = getOption("LANG",
  "en-US,en;q=0.8"), key = getOption("OSM_API_KEY", ""))
}
\arguments{
\item{query}{Query string to search for}

\item{country_codes}{Limit search results to a specific country (or a list of countries).
Should be the ISO 3166-1alpha2 code,e.g. gb for the United Kingdom, de for Germany, etc.
Format: \code{<countrycode>[,<countrycode>][,<countrycode>]...}}

\item{viewbox}{The preferred area to find search results. Format:
\code{<left>,<top>,<right>,<bottom>}}

\item{bounded}{Restrict the results to only items contained with the bounding box.
Restricting the results to the bounding box also enables searching by amenity only.
For example a search query of just "[pub]" would normally be rejected
but with \code{bounded=TRUE} will result in a list of items matching within the bounding box.}

\item{address_details}{Include a breakdown of the address into elements (TRUE == include)}

\item{exclude_place_ids}{If you do not want certain openstreetmap objects to appear in the search result,
give a comma separated list of the place_id's you want to skip. This can be used
to broaden search results. For example, if a previous query only returned a few
results, then including those here would cause the search to return other, less
accurate, matches (if possible). Format \code{<place_id,[place_id],[place_id]>}}

\item{limit}{Limit the number of returned results (numeric)}

\item{email}{If you are making large numbers of request please include a valid email address
or alternatively include your email address as part of the User-Agent string.
This information will be kept confidential and only used to contact you in the
event of a problem, see Usage Policy for more details. You can pass the value
in directly or set the \code{OSM_API_EMAIL} option and the function will
it for all requests.}

\item{accept_language}{Preferred language order for showing search results
Either uses standard rfc2616 accept-language string or a simple comma separated list
of language codes. The \code{LANG} option will be used, if set.}

\item{key}{To access the openstreetmap API you need a valid API key. You can get it for free
at \url{https://developer.mapquest.com}}
}
\description{
Vectorized over \code{query}. If the return types are mixed (i.e. not all of the
same spatial type) the function will stop with an error.
}
\details{
Nominatim indexes named (or numbered) features with the OSM data set and a subset of
other unnamed features (pubs, hotels, churches, etc).
}
\note{
A slight delay is introduced between calls to both OpenStreetMap Nominatim &
      MapQuest Nominatim API to reduce load on their servers.

Data (c) OpenStreetMap contributors, ODbL 1.0. \url{http://www.openstreetmap.org/copyright}\cr
Nominatim Usage Policy: \url{http://wiki.openstreetmap.org/wiki/Nominatim_usage_policy}\cr
MapQuest Nominatim Terms of Use: \url{http://info.mapquest.com/terms-of-use/}\cr

Search terms are processed first left to right and then right to left if that fails.
}
\examples{
\dontrun{
# returns SpatialPointsDataFrame
osm_search_spatial("[bakery]+berlin+wedding", limit=5)

# returns SpatialLinesDataFrame
osm_search_spatial("135-7 pilkington avenue, birmingham", limit=10)

# returns SpatialPolygonsDataFrame
osm_search_spatial("135 pilkington avenue, birmingham", limit=10)
}
}
